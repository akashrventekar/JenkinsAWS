{
 	"AWSTemplateFormatVersion": "2010-09-09",
 	"Description": "AWS CloudFormation Sample Template to setup Jenkins Server in an Amazon Linux instance. **WARNING** This template creates one or more Amazon EC2 instances. You will be billed for the AWS resources used if you create a stack from this template.",
 	"Parameters": {
	    "InstanceType": {
	      "Description": "Jenkins Server EC2 instance type",
	      "Type": "String",
	      "Default": "t2.micro",
	      "AllowedValues": [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"],
	      "ConstraintDescription": "must be a valid EC2 instance type."
	    },
		"IamInstanceProfile" : 
		{
			"Description" : "Amazon IamInstanceProfile",
			"Type" : "String",
			"Default" : "EC2FullAccess"
		},
 		"KeyName": {
 			"Description": "Name of an existing EC2 keypair to enable SSH access to the instances",
 			"Type": "AWS::EC2::KeyPair::KeyName",
 			"ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
 		},
	    "SSHLocation" : {
	      "Description" : "The IP address range that can be used to SSH to the EC2 instances",
	      "Type": "String",
	      "MinLength": "9",
	      "MaxLength": "18",
	      "Default": "0.0.0.0/0",
	      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
	      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
	    }
 	},
 	"Mappings": {
	    "AWSInstanceType2Arch" : {
	      "t1.micro"    : { "Arch" : "PV64"   },
	      "t2.nano"     : { "Arch" : "HVM64"  },
	      "t2.micro"    : { "Arch" : "HVM64"  },
	      "t2.small"    : { "Arch" : "HVM64"  },
	      "t2.medium"   : { "Arch" : "HVM64"  },
	      "t2.large"    : { "Arch" : "HVM64"  },
	      "m1.small"    : { "Arch" : "PV64"   },
	      "m1.medium"   : { "Arch" : "PV64"   },
	      "m1.large"    : { "Arch" : "PV64"   },
	      "m1.xlarge"   : { "Arch" : "PV64"   },
	      "m2.xlarge"   : { "Arch" : "PV64"   },
	      "m2.2xlarge"  : { "Arch" : "PV64"   },
	      "m2.4xlarge"  : { "Arch" : "PV64"   },
	      "m3.medium"   : { "Arch" : "HVM64"  },
	      "m3.large"    : { "Arch" : "HVM64"  },
	      "m3.xlarge"   : { "Arch" : "HVM64"  },
	      "m3.2xlarge"  : { "Arch" : "HVM64"  },
	      "m4.large"    : { "Arch" : "HVM64"  },
	      "m4.xlarge"   : { "Arch" : "HVM64"  },
	      "m4.2xlarge"  : { "Arch" : "HVM64"  },
	      "m4.4xlarge"  : { "Arch" : "HVM64"  },
	      "m4.10xlarge" : { "Arch" : "HVM64"  },
	      "c1.medium"   : { "Arch" : "PV64"   },
	      "c1.xlarge"   : { "Arch" : "PV64"   },
	      "c3.large"    : { "Arch" : "HVM64"  },
	      "c3.xlarge"   : { "Arch" : "HVM64"  },
	      "c3.2xlarge"  : { "Arch" : "HVM64"  },
	      "c3.4xlarge"  : { "Arch" : "HVM64"  },
	      "c3.8xlarge"  : { "Arch" : "HVM64"  },
	      "c4.large"    : { "Arch" : "HVM64"  },
	      "c4.xlarge"   : { "Arch" : "HVM64"  },
	      "c4.2xlarge"  : { "Arch" : "HVM64"  },
	      "c4.4xlarge"  : { "Arch" : "HVM64"  },
	      "c4.8xlarge"  : { "Arch" : "HVM64"  },
	      "g2.2xlarge"  : { "Arch" : "HVMG2"  },
	      "g2.8xlarge"  : { "Arch" : "HVMG2"  },
	      "r3.large"    : { "Arch" : "HVM64"  },
	      "r3.xlarge"   : { "Arch" : "HVM64"  },
	      "r3.2xlarge"  : { "Arch" : "HVM64"  },
	      "r3.4xlarge"  : { "Arch" : "HVM64"  },
	      "r3.8xlarge"  : { "Arch" : "HVM64"  },
	      "i2.xlarge"   : { "Arch" : "HVM64"  },
	      "i2.2xlarge"  : { "Arch" : "HVM64"  },
	      "i2.4xlarge"  : { "Arch" : "HVM64"  },
	      "i2.8xlarge"  : { "Arch" : "HVM64"  },
	      "d2.xlarge"   : { "Arch" : "HVM64"  },
	      "d2.2xlarge"  : { "Arch" : "HVM64"  },
	      "d2.4xlarge"  : { "Arch" : "HVM64"  },
	      "d2.8xlarge"  : { "Arch" : "HVM64"  },
	      "hi1.4xlarge" : { "Arch" : "HVM64"  },
	      "hs1.8xlarge" : { "Arch" : "HVM64"  },
	      "cr1.8xlarge" : { "Arch" : "HVM64"  },
	      "cc2.8xlarge" : { "Arch" : "HVM64"  }
	    }, 		
	 	"AWSRegionArch2AMI" : {
	      "us-east-1"        : {"PV64" : "ami-2a69aa47", "HVM64" : "ami-6869aa05", "HVMG2" : "ami-2e5e9c43"},
	      "us-west-2"        : {"PV64" : "ami-7f77b31f", "HVM64" : "ami-7172b611", "HVMG2" : "ami-83b770e3"},
	      "us-west-1"        : {"PV64" : "ami-a2490dc2", "HVM64" : "ami-31490d51", "HVMG2" : "ami-fd76329d"},
	      "eu-west-1"        : {"PV64" : "ami-4cdd453f", "HVM64" : "ami-f9dd458a", "HVMG2" : "ami-b9bd25ca"},
	      "eu-central-1"     : {"PV64" : "ami-6527cf0a", "HVM64" : "ami-ea26ce85", "HVMG2" : "ami-7f04ec10"},
	      "ap-northeast-1"   : {"PV64" : "ami-3e42b65f", "HVM64" : "ami-374db956", "HVMG2" : "ami-e0ee1981"},
	      "ap-northeast-2"   : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-2b408b45", "HVMG2" : "NOT_SUPPORTED"},
	      "ap-southeast-1"   : {"PV64" : "ami-df9e4cbc", "HVM64" : "ami-a59b49c6", "HVMG2" : "ami-0cb5676f"},
	      "ap-southeast-2"   : {"PV64" : "ami-63351d00", "HVM64" : "ami-dc361ebf", "HVMG2" : "ami-a71c34c4"},
	      "ap-south-1"       : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-ffbdd790", "HVMG2" : "ami-f5b2d89a"},
	      "sa-east-1"        : {"PV64" : "ami-1ad34676", "HVM64" : "ami-6dd04501", "HVMG2" : "NOT_SUPPORTED"},
	      "cn-north-1"       : {"PV64" : "ami-77559f1a", "HVM64" : "ami-8e6aa0e3", "HVMG2" : "NOT_SUPPORTED"}
	    }
 	},
 	"Resources": {
 		"JenkinsAS": {
 			"Type": "AWS::AutoScaling::AutoScalingGroup",
 			"Properties": {
				"AvailabilityZones" : { "Fn::GetAZs" : ""},
 				"LaunchConfigurationName": { "Ref": "JenkinsLC" },
 				"MaxSize": "1",
 				"MinSize": "1",
 				"DesiredCapacity": "1",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Ref": "AWS::StackName" },
                        "PropagateAtLaunch": true
                    }
                ]
            },
	      	"CreationPolicy" : {
	        	"ResourceSignal" : {
	          		"Timeout" : "PT15M",
	          		"Count"   : "1"
	        	}
	      	},
	      	"UpdatePolicy": {
	        	"AutoScalingRollingUpdate": {
		          "MinInstancesInService": "1",
		          "MaxBatchSize": "1",
		          "PauseTime" : "PT15M",
		          "WaitOnResourceSignals": "true"
	        	}
	      	}    			
 		},
 		"JenkinsLC": {
 			"Type": "AWS::AutoScaling::LaunchConfiguration",
 			"Properties": {
 				"ImageId": { "Fn::FindInMap": [ "AWSRegionArch2AMI", { "Ref": "AWS::Region" },
            		{ "Fn::FindInMap": [ "AWSInstanceType2Arch", { "Ref": "InstanceType" }, "Arch" ] } ] },
 				"InstanceType": { 
 					"Ref": "InstanceType" 
 				},
				"IamInstanceProfile" : { "Ref" : "IamInstanceProfile" },
 				"KeyName": {
 					"Ref": "KeyName"
 				},
 				"SecurityGroups": [{
 					"Ref": "SecurityGroup"
 				}],
				"UserData": {
 					"Fn::Base64": {
 						"Fn::Join": [
 							"", [
 								"#!/bin/bash\n",
								"sudo yum -y update\n",
								"sudo yum install -y git nginx java-1.8.0-openjdk-devel aws-cli\n",
								"sudo alternatives --set java /usr/lib/jvm/jre-1.8.0-openjdk.x86_64/bin/java\n",
								"sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\n",
								"sudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\n",
								"sudo yum install jenkins -y\n",
								"sudo service jenkins start\n",
								"sudo chkconfig --add jenkins\n",
 								"## Set up port forwarding\n",
                      			"iptables -A PREROUTING -t nat -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080\n",
                      			"iptables-save > /etc/sysconfig/iptables\n",
			                    "## Signal CloudFormation complete\n",
								"/opt/aws/bin/cfn-signal -e 0 --stack ", { "Ref": "AWS::StackName" },
								          " --resource JenkinsAS ",
								          " --region ", { "Ref" : "AWS::Region" }, "\n"
							]
 						]
 					}
 				}
 			}
 		},
 		"SecurityGroup": {
 			"Type": "AWS::EC2::SecurityGroup",
 			"Properties": {
 				"GroupDescription": "Jenkins Server Security Group",
 				"SecurityGroupIngress": [
 				{
 					"IpProtocol": "tcp",
 					"CidrIp": { "Ref" : "SSHLocation" },
 					"FromPort": "80",
 					"ToPort": "80"
 				}, 
 				{
 					"IpProtocol": "tcp",
 					"CidrIp": { "Ref" : "SSHLocation" },
 					"FromPort": "8080",
 					"ToPort": "8080"
 				}, 
 				{
 					"IpProtocol": "tcp",
 					"FromPort": "22",
 					"ToPort": "22",
 					"CidrIp": { "Ref" : "SSHLocation" }
 				}]
 			}
 		}
 	}
 }
